// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  STAFF
  TOURIST
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  role      Role     @default(TOURIST)
  tourist   Tourist?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tourist {
  id        String   @id @default(uuid())
  firstName String
  lastName  String
  phone     String?
  address   String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Tour {
  id          String   @id @default(uuid())
  name        String
  description String?
  price       Float
  duration    Int // in days
  trips       Trip[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Trip {
  id          String   @id @default(uuid())
  startDate   DateTime
  endDate     DateTime
  destination String
  tourist     Tourist  @relation(fields: [touristId], references: [id])
  touristId   String
  tour        Tour?    @relation(fields: [tourId], references: [id])
  tourId      String?
  status      String   @default("UPCOMING") // UPCOMING, ONGOING, COMPLETED, CANCELLED
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
